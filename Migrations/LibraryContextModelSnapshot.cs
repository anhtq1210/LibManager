// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyLibraryManager.Models;

namespace MyLibraryManager.Migrations
{
    [DbContext(typeof(LibraryContext))]
    partial class LibraryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyLibraryManager.Models.Book", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CategoryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            ID = new Guid("41c45420-ac0b-4ab1-94bf-4b545d8eda36"),
                            Author = "NXB",
                            CategoryID = new Guid("ec705bf3-7e8e-4be2-8894-07d41c6166d9"),
                            Created = new DateTime(2021, 4, 26, 22, 53, 37, 576, DateTimeKind.Local).AddTicks(9077),
                            IsAvailable = false,
                            Modified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Math 11"
                        },
                        new
                        {
                            ID = new Guid("fc0e38bb-4b1c-4050-b094-9a072a56e23e"),
                            Author = "NXB",
                            CategoryID = new Guid("ec705bf3-7e8e-4be2-8894-07d41c6166d9"),
                            Created = new DateTime(2021, 4, 26, 22, 53, 37, 576, DateTimeKind.Local).AddTicks(9091),
                            IsAvailable = false,
                            Modified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Math 12"
                        },
                        new
                        {
                            ID = new Guid("82015663-f63c-48d1-887b-dcb3104125de"),
                            Author = "NXB",
                            CategoryID = new Guid("2bc95077-bc27-414a-aa34-e03cf2a1da89"),
                            Created = new DateTime(2021, 4, 26, 22, 53, 37, 576, DateTimeKind.Local).AddTicks(9094),
                            IsAvailable = false,
                            Modified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Literatue 12"
                        });
                });

            modelBuilder.Entity("MyLibraryManager.Models.Category", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = new Guid("ec705bf3-7e8e-4be2-8894-07d41c6166d9"),
                            Created = new DateTime(2021, 4, 26, 22, 53, 37, 576, DateTimeKind.Local).AddTicks(7376),
                            Modified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Math"
                        },
                        new
                        {
                            ID = new Guid("2bc95077-bc27-414a-aa34-e03cf2a1da89"),
                            Created = new DateTime(2021, 4, 26, 22, 53, 37, 576, DateTimeKind.Local).AddTicks(7391),
                            Modified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Literature"
                        });
                });

            modelBuilder.Entity("MyLibraryManager.Models.Request", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("MyLibraryManager.Models.RequestDetail", b =>
                {
                    b.Property<Guid>("BookID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RequestID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BookID", "RequestID");

                    b.HasIndex("RequestID");

                    b.ToTable("RequestDetails");
                });

            modelBuilder.Entity("MyLibraryManager.Models.User", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Passwords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            ID = new Guid("f49bac34-00b5-434d-abd0-cee7e5e07298"),
                            Created = new DateTime(2021, 4, 26, 22, 53, 37, 574, DateTimeKind.Local).AddTicks(8014),
                            Modified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Passwords = "123",
                            Role = 1,
                            UserName = "admin"
                        },
                        new
                        {
                            ID = new Guid("477e6f33-344d-481c-8a1a-a0fe375a795c"),
                            Created = new DateTime(2021, 4, 26, 22, 53, 37, 575, DateTimeKind.Local).AddTicks(6631),
                            Modified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Passwords = "123",
                            Role = 0,
                            UserName = "AnhTQ"
                        });
                });

            modelBuilder.Entity("MyLibraryManager.Models.Book", b =>
                {
                    b.HasOne("MyLibraryManager.Models.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MyLibraryManager.Models.Request", b =>
                {
                    b.HasOne("MyLibraryManager.Models.User", "User")
                        .WithMany("Requests")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyLibraryManager.Models.RequestDetail", b =>
                {
                    b.HasOne("MyLibraryManager.Models.Book", "Book")
                        .WithMany("RequestDetails")
                        .HasForeignKey("BookID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyLibraryManager.Models.Request", "Request")
                        .WithMany("RequestDetail")
                        .HasForeignKey("RequestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("MyLibraryManager.Models.Book", b =>
                {
                    b.Navigation("RequestDetails");
                });

            modelBuilder.Entity("MyLibraryManager.Models.Category", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("MyLibraryManager.Models.Request", b =>
                {
                    b.Navigation("RequestDetail");
                });

            modelBuilder.Entity("MyLibraryManager.Models.User", b =>
                {
                    b.Navigation("Requests");
                });
#pragma warning restore 612, 618
        }
    }
}
